@{

    Layout = null;
}
<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <title>在途运单</title>
    <link rel="stylesheet" href="http://cache.amap.com/lbs/static/main.css?v=1.0" />
    <script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=4de8fc02064b304db7e4ec8ca9c18b50"></script>
    <script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>
    <link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css" />
    <script src="../../Content/H/js/jquery-2.1.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        //        var params="tmcom=88888";
        var i = 0;
        var isautofresh = true;

        function Show() {

            $.ajax({
                url: "/Map/Getonroadcarlists",
                type: 'post',
                dataType: "json",
                async: true,
                data: {},
                success: function (data) {
                    //alert(JSON.stringify(data));
                    if (data.sign == "0") {
                        alert(data.msg);
                        return;
                    }
                    else {
                        cleatmarks();
                        for (var i in data.cars) {
                            if (data.cars[i].jingweidu.split(",")[0] != "" && data.cars[i].jingweidu.split(",")[0] != null)
                                addmaker(data.cars[i].jingweidu.split(","), data.cars[i].labelinfo, data.cars[i].markinfo);

                        }
                        setview();
                    }
                }

            });


        }
    </script>
</head>
<body>
    <div id="mapContainer" class="button-group">
    </div>
    <div class="button-group">
        <input type="button" class="button" id="control" value="显示/隐藏实时路况" />
        <input type="button" class="button" id="mapshow" value="刷新地图" />
    </div>
    <script type="text/javascript">
        //初始化地图对象，加载地图
        ////初始化加载地图时，若center及level属性缺省，地图默认显示用户当前城市范围
        var cluster, markers = [];

        var map = new AMap.Map('mapContainer', {
            resizeEnable: true

        });
        var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });
        //        var markers = [];
        //图层切换控件

        //        AMap.event.addDomListener(document.getElementById('clearMarker'), 'click', function () {
        //            addmaker("120102", '我是第1个', [116.205467, 39.907761], 'r');
        //            setview();


        //        }, false);

        //地图中添加地图操作ToolBar插件
        map.plugin(['AMap.ToolBar'], function () {
            //设置地位标记为自定义标记
            var toolBar = new AMap.ToolBar();
            map.addControl(toolBar);
        });

        //        var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });
        function cleatmarks() {
            map.remove(markers);
        }
        //p:经纬度 l:标签 i：信息窗口
        function addmaker(p, l, i) {


            var marker = new AMap.Marker({
                position: p,
                map: map,
                extData: false,
                icon: "../../Images/zaitu.png"
            });
            markers.push(marker);
            marker.setLabel({//label默认蓝框白底左上角显示，样式className为：amap-marker-label
                offset: new AMap.Pixel(35, 0), //修改label相对于maker的位置
                content: l
            });
            marker.content = i;

            marker.on('click', markerClick);
            //            marker.emit('click', { target: marker });

            markers.push(marker);


        }

        function markerClick(e) {

            infoWindow.setContent(e.target.content);
            infoWindow.open(map, e.target.getPosition());
        }
        function setview() {

            map.setFitView();
        }

        function clientaddmaker(p, l, i) {
            addmaker(p.split(","), l, i);

        }

        //        function setmakerui(d, c, p, i) {

        //            for (var i = 0; i < markers.length; i++) {

        ////                if (markers[i].getPosition().toString() == p) {
        ////                                        var mks=[];
        ////                                        mks.push(mk);
        ////                                        map.remove(mks);
        ////                }
        //            }
        //            }
        //            for (var mk in markers) {
        //                alert(mk.target.getPosition().toString());
        //                if (mk.target.getPosition().toString() == p) {
        //                    var mks=[];
        //                    mks.push(mk);
        //                    map.remove(mks);
        //                    alert('remove'+mk.target.getPosition());
        //                }
        //                        }

        //            marker.setmap(null);
        //            markers.push(marker);
        //            map.remove(markers);
        //alert('777777');

        //            if (flag == '0') {
        //                addmaker(d, c, p.split(","), i);
        //            }
        //            else {
        //                addmaker(d, c, p.split(","), i);
        //            }
        //        }



        function addCluster() {

            map.plugin(["AMap.MarkerClusterer"], function () {
                cluster = new AMap.MarkerClusterer(map, markers);
            });
        }

        //实时路况图层
        var trafficLayer = new AMap.TileLayer.Traffic({
            zIndex: 10
        });
        trafficLayer.setMap(map);

        var isVisible = true;
        AMap.event.addDomListener(document.getElementById('control'), 'click', function () {
            if (isVisible) {
                trafficLayer.hide();
                isVisible = false;
            } else {
                trafficLayer.show();
                isVisible = true;
            }
        }, false);
        AMap.event.addDomListener(document.getElementById('mapshow'), 'click', function () {
            if (isautofresh == true) {
                isautofresh = false;
                $("#mapshow").val("停止自动刷新");
            }
            else {
                isautofresh = true;
                i = 0;
            }
        }, false);
    </script>
    <script type="text/javascript">
        $(function () {
            Show();
            setInterval("freshlable()", "1000");
        });

        function freshlable() {
            if (isautofresh == false) {
                return;
            }
            i = i + 1
            if (i >= 60) {
                i = 0;
                Show();
            }
            $("#mapshow").val("自动刷新(" + (60 - i) + ")秒");
        }
    </script>
</body>
</html>
